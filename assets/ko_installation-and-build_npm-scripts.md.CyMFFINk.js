import{_ as e,c as d,o,ag as r}from"./chunks/framework.BgId8OS5.js";const m=JSON.parse('{"title":"NPM Scripts","description":"","frontmatter":{"title":"NPM Scripts","order":3},"headers":[],"relativePath":"ko/installation-and-build/npm-scripts.md","filePath":"ko/installation-and-build/npm-scripts.md","lastUpdated":1750410947000}'),i={name:"ko/installation-and-build/npm-scripts.md"};function a(c,t,n,l,s,u){return o(),d("div",null,t[0]||(t[0]=[r('<h1 id="npm-스크립트" tabindex="-1">Npm 스크립트 <a class="header-anchor" href="#npm-스크립트" aria-label="Permalink to &quot;Npm 스크립트&quot;">​</a></h1><blockquote><p>$ npm run %SCRIPT_NAME%</p></blockquote><h2 id="일반" tabindex="-1">일반 <a class="header-anchor" href="#일반" aria-label="Permalink to &quot;일반&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Script Name</th><th>Description</th></tr></thead><tbody><tr><td><code>dev</code></td><td>Start Electron as a development environment</td></tr><tr><td><code>dev:debug</code></td><td>Start Electron as a development environment (with vite debug)</td></tr><tr><td><code>dev:debug:force</code></td><td>Start Electron as a development environment (with vite debug + clean vite cache)</td></tr><tr><td><code>build:pre</code></td><td>Commands commonly run at build time. This script does not need to be run separately.</td></tr><tr><td><code>build</code></td><td>Build the package for the current operating system.</td></tr><tr><td><code>build:all</code></td><td>Build a specified package for the entire operating system (Requires cross-platform build configuration)</td></tr><tr><td><code>build:dir</code></td><td><code>electron-builder</code> directory build</td></tr><tr><td><code>build:mac</code></td><td>Build preconfigured packages for macOS</td></tr><tr><td><code>build:linux</code></td><td>Build preconfigured packages for Linux</td></tr><tr><td><code>build:win</code></td><td>Build preconfigured packages for Windows</td></tr><tr><td><code>lint</code></td><td>ESLint code inspection. It does not modify the code.</td></tr><tr><td><code>lint:fix</code></td><td>ESLint code inspection. Use auto-fix to fix your code.</td></tr><tr><td><code>format</code></td><td>Prettier code inspection. It does not modify the code.</td></tr><tr><td><code>format:fix</code></td><td>Prettier code inspection. Use auto-fix to fix your code.</td></tr><tr><td><code>test</code></td><td>Build a package for testing and run tests against the test specification file.</td></tr><tr><td><code>test:linux</code></td><td>Build a package for testing and run tests against the test specification file. (for linux ci only)</td></tr></tbody></table><h2 id="문서용" tabindex="-1">문서용 <a class="header-anchor" href="#문서용" aria-label="Permalink to &quot;문서용&quot;">​</a></h2><p>프로젝트 문서에 기여하는 경우에만 사용됩니다. <code>docs</code> 디렉토리 위치에서 실행해야 합니다.</p><table tabindex="0"><thead><tr><th>Script Name</th><th>Description</th></tr></thead><tbody><tr><td><code>dev</code></td><td>Start the local document server. (For development)</td></tr><tr><td><code>build</code></td><td>Build a local document server. Used only for GitHub page builders.</td></tr><tr><td><code>serve</code></td><td>Start the local document server.</td></tr></tbody></table>',7)]))}const h=e(i,[["render",a]]);export{m as __pageData,h as default};
