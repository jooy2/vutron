import{_ as t,c as s,o as r,ag as a}from"./chunks/framework.BgId8OS5.js";const g=JSON.parse('{"title":"主流程与渲染器流程","description":"","frontmatter":{},"headers":[],"relativePath":"zhHans/electron-how-to/main-and-renderer-process.md","filePath":"zhHans/electron-how-to/main-and-renderer-process.md","lastUpdated":1735005729000}'),o={name:"zhHans/electron-how-to/main-and-renderer-process.md"};function n(i,e,d,c,p,l){return r(),s("div",null,e[0]||(e[0]=[a(`<h1 id="主流程与渲染器流程" tabindex="-1">主流程与渲染器流程 <a class="header-anchor" href="#主流程与渲染器流程" aria-label="Permalink to &quot;主流程与渲染器流程&quot;">​</a></h1><p>一个<strong>Vutron</strong>应用程序被分为代码，分为主进程和渲染器进程。</p><p>**“主”<strong>是<code>src/main</code>的代码，主要是由Electron处理的进程代码。</strong>“渲染器”**是<code>src/renderer</code>的代码，主要用于前端渲染过程，如Vue。</p><p>一般来说，<strong>Node.js</strong>脚本无法在渲染器进程中运行。例如，包含Node.js使用的API的模块，或<strong>Node.js</strong>的本机模块，如<code>path</code>或<code>net</code>、<code>os</code>或<code>crypto</code>。</p><p>预加载脚本在渲染器加载之前运行。它为主进程创建了一个桥梁，出于安全考虑，将Node.js脚本的执行与渲染器区域分开并隔离。</p><p>为了安全执行脚本，建议主进程执行Node脚本，渲染器通过消息传递接收执行结果。这可以通过<strong>IPC通信</strong>来实现。</p><p>欲了解更多信息，请参阅以下文章: <a href="https://www.electronjs.org/docs/latest/tutorial/ipc" target="_blank" rel="noreferrer">https://www.electronjs.org/docs/latest/tutorial/ipc</a></p><h3 id="如何在渲染器上运行node-js" tabindex="-1">如何在渲染器上运行Node.js？ <a class="header-anchor" href="#如何在渲染器上运行node-js" aria-label="Permalink to &quot;如何在渲染器上运行Node.js？&quot;">​</a></h3><p>如果您想跳过安全问题并在渲染器中使用 Node.js 脚本，需要在 <code>vite.config.ts</code> 文件中将 <code>nodeIntegration</code> 设置为 <code>true</code>。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rendererPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nodeIntegration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>欲了解更多信息，请参阅以下文章: <a href="https://github.com/electron-vite/vite-plugin-electron-renderer" target="_blank" rel="noreferrer">https://github.com/electron-vite/vite-plugin-electron-renderer</a></p>`,11)]))}const u=t(o,[["render",n]]);export{g as __pageData,u as default};
