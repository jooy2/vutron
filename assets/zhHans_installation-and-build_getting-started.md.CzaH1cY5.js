import{_ as a,c as i,o as t,ag as n}from"./chunks/framework.BgId8OS5.js";const c=JSON.parse('{"title":"入门","description":"","frontmatter":{"order":1},"headers":[],"relativePath":"zhHans/installation-and-build/getting-started.md","filePath":"zhHans/installation-and-build/getting-started.md","lastUpdated":1735005729000}'),e={name:"zhHans/installation-and-build/getting-started.md"};function l(h,s,p,r,d,k){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="入门" tabindex="-1">入门 <a class="header-anchor" href="#入门" aria-label="Permalink to &quot;入门&quot;">​</a></h1><h2 id="克隆项目" tabindex="-1">克隆项目 <a class="header-anchor" href="#克隆项目" aria-label="Permalink to &quot;克隆项目&quot;">​</a></h2><h3 id="方法-1-npm-init-推荐" tabindex="-1">方法 1: <code>npm init</code> (推荐) <a class="header-anchor" href="#方法-1-npm-init-推荐" aria-label="Permalink to &quot;方法 1: \`npm init\` (推荐)&quot;">​</a></h3><p>只需使用 npm 命令，就能轻松克隆一个版本库。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vutron</span></span></code></pre></div><p>上述方法不会为项目创建不必要的文档和<code>.github</code>相关文件。</p><h3 id="方法-2-使用此模板" tabindex="-1">方法 2: 使用此模板 <a class="header-anchor" href="#方法-2-使用此模板" aria-label="Permalink to &quot;方法 2: 使用此模板&quot;">​</a></h3><p>点击 <strong><a href="https://github.com/jooy2/vutron/generate" target="_blank" rel="noreferrer">使用此模板</a></strong>，立即创建自己的项目。</p><p>此方法可立即在 GitHub 上创建一个仓库，但在使用之前，您需要在本地克隆该项目。</p><h3 id="方法-3-克隆该版本库" tabindex="-1">方法 3: 克隆该版本库 <a class="header-anchor" href="#方法-3-克隆该版本库" aria-label="Permalink to &quot;方法 3: 克隆该版本库&quot;">​</a></h3><p>使用以下命令克隆该 repo。此方法适用于直接向 Vutron 代码库投稿。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/jooy2/vutron</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PROJECT_NAM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">E</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>克隆项目后，在终端运行以下命令:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># via npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># via yarn (https://yarnpkg.com)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># via pnpm (https://pnpm.io)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span></code></pre></div><h2 id="在开发环境中运行" tabindex="-1">在开发环境中运行 <a class="header-anchor" href="#在开发环境中运行" aria-label="Permalink to &quot;在开发环境中运行&quot;">​</a></h2><p>开发环境中的应用程序通过 <strong><a href="https://vitejs.dev" target="_blank" rel="noreferrer">Vite</a></strong> 运行。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p>如果运行命令行命令后应用程序没有出现，您可能需要检查默认端口是否被其他应用程序使用。</p><p>Vite 默认使用端口 <code>5173</code>。</p>`,20)]))}const g=a(e,[["render",l]]);export{c as __pageData,g as default};
