import{_ as d,c as e,o as r,ag as o}from"./chunks/framework.BgId8OS5.js";const u=JSON.parse('{"title":"NPM Scripts","description":"","frontmatter":{"title":"NPM Scripts","order":3},"headers":[],"relativePath":"zhHans/installation-and-build/npm-scripts.md","filePath":"zhHans/installation-and-build/npm-scripts.md","lastUpdated":1750410947000}'),a={name:"zhHans/installation-and-build/npm-scripts.md"};function c(i,t,n,l,s,b){return r(),e("div",null,t[0]||(t[0]=[o('<h1 id="npm-脚本" tabindex="-1">Npm 脚本 <a class="header-anchor" href="#npm-脚本" aria-label="Permalink to &quot;Npm 脚本&quot;">​</a></h1><blockquote><p>$ npm run %SCRIPT_NAME%</p></blockquote><h2 id="一般情况" tabindex="-1">一般情况 <a class="header-anchor" href="#一般情况" aria-label="Permalink to &quot;一般情况&quot;">​</a></h2><table tabindex="0"><thead><tr><th>脚本名称</th><th>说明</th></tr></thead><tbody><tr><td><code>dev</code></td><td>启动电子作为开发环境</td></tr><tr><td><code>dev:debug</code></td><td>将 Electron 作为开发环境启动（使用 vite debug）</td></tr><tr><td><code>dev:debug:force</code></td><td>以Electron作为开发环境启动（使用vite调试+清理vite缓存）</td></tr><tr><td><code>build:pre</code></td><td>通常在编译时运行的命令。此脚本无需单独运行。</td></tr><tr><td><code>build</code></td><td>为当前操作系统打包。</td></tr><tr><td><code>build:all</code></td><td>为整个操作系统构建指定软件包（需要跨平台构建配置）</td></tr><tr><td><code>build:dir</code></td><td><code>electron-builder</code>目录构建</td></tr><tr><td><code>build:mac</code></td><td>为macOS构建预配置软件包</td></tr><tr><td><code>build:linux</code></td><td>为Linux构建预配置软件包</td></tr><tr><td><code>build:win</code></td><td>为Windows构建预配置软件包</td></tr><tr><td><code>lint</code></td><td>ESLint代码检查。它不会修改代码。</td></tr><tr><td><code>lint:fix</code></td><td>ESLint代码检查。使用自动修复功能修复代码。</td></tr><tr><td><code>format</code></td><td>更漂亮的代码检查。它不会修改代码。</td></tr><tr><td><code>format:fix</code></td><td>更漂亮的代码检查。使用自动修复功能修复代码。</td></tr><tr><td><code>test</code></td><td>根据测试规范文件构建测试包并运行测试。</td></tr><tr><td><code>test:linux</code></td><td>根据测试规范文件构建测试包并运行测试。（仅适用于linux ci）</td></tr></tbody></table><h2 id="文档" tabindex="-1">文档 <a class="header-anchor" href="#文档" aria-label="Permalink to &quot;文档&quot;">​</a></h2><p>仅用于为项目文档提供素材。必须从“文档”目录位置运行。</p><table tabindex="0"><thead><tr><th>Script Name</th><th>Description</th></tr></thead><tbody><tr><td><code>dev</code></td><td>启动本地文档服务器。（开发中）</td></tr><tr><td><code>build</code></td><td>构建本地文档服务器。仅用于 GitHub 页面构建器。</td></tr><tr><td><code>serve</code></td><td>启动本地文档服务器。</td></tr></tbody></table>',7)]))}const h=d(a,[["render",c]]);export{u as __pageData,h as default};
