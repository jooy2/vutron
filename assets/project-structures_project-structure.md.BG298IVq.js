import{_ as n,c as a,o as e,ag as p}from"./chunks/framework.BgId8OS5.js";const f=JSON.parse('{"title":"Project Structure","description":"","frontmatter":{"order":1},"headers":[],"relativePath":"project-structures/project-structure.md","filePath":"en/project-structures/project-structure.md","lastUpdated":1746665143000}'),i={name:"project-structures/project-structure.md"};function t(l,s,o,c,r,u){return e(),a("div",null,s[0]||(s[0]=[p(`<h1 id="project-structure" tabindex="-1">Project Structure <a class="header-anchor" href="#project-structure" aria-label="Permalink to &quot;Project Structure&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/</span></span>
<span class="line"><span>├─ .github - GitHub files (only used for Vutron GitHub project contributions)</span></span>
<span class="line"><span>│  └─ ISSUE_TEMPLATE/</span></span>
<span class="line"><span>│  └─ resources/ - GitHub resources used for README.md, etc.</span></span>
<span class="line"><span>│  └─ workflows/ - GitHub workflows definition</span></span>
<span class="line"><span>│  └─ dependabot.yml</span></span>
<span class="line"><span>│  └─ FUNDING.yml</span></span>
<span class="line"><span>├─ .vscode - Common project configuration files used by Visual Studio Code IDE</span></span>
<span class="line"><span>├─ buildAssets/ - Package resource (icon, logo, etc.) file used for Electron build</span></span>
<span class="line"><span>│  └─ builder/</span></span>
<span class="line"><span>│  │  │  └─ config.ts - \`electron-builder\` dynamic configuration file</span></span>
<span class="line"><span>│  └─ icons/</span></span>
<span class="line"><span>├─ dist/ - Output directory used to build the package</span></span>
<span class="line"><span>├─ docs/ - Project documents (optionally enabled)</span></span>
<span class="line"><span>│  └─ .vitepress/</span></span>
<span class="line"><span>│  │  │  └─ config.mts - VitePress configuration file used for document hosting</span></span>
<span class="line"><span>│  └─ public/ - Root resource directory for VitePress documentation pages</span></span>
<span class="line"><span>├─ node_modules/</span></span>
<span class="line"><span>├─ src/</span></span>
<span class="line"><span>│  ├─ main/ - Main (Electron) process source code</span></span>
<span class="line"><span>│  │  ├─ utils/ - Main process utilities</span></span>
<span class="line"><span>│  │  │  └─ Constants.ts - Main global definition</span></span>
<span class="line"><span>│  │  │  └─ Menus.ts - Main global menu definition</span></span>
<span class="line"><span>│  │  └─ index.ts - Main process entry point</span></span>
<span class="line"><span>│  │  └─ IPCs.ts - Main process ipc handlers definition</span></span>
<span class="line"><span>│  │  └─ MainRunner.ts - Main process main window processing</span></span>
<span class="line"><span>│  ├─ preload/ - Preload (Electron-Vue communication bridge) process source code</span></span>
<span class="line"><span>│  │  └─ index.ts</span></span>
<span class="line"><span>│  ├─ public/ - Main + Renderer static resources</span></span>
<span class="line"><span>│  │  └─ images/</span></span>
<span class="line"><span>│  ├─ renderer/ - Renderer (Vue) process source code</span></span>
<span class="line"><span>│  │  ├─ components/ - Vue components collection</span></span>
<span class="line"><span>│  │  │  └─ layout/ - Layout components</span></span>
<span class="line"><span>│  │  ├─ locales/ - Vue i18n language resource file</span></span>
<span class="line"><span>│  │  ├─ plugins/ - Vue plugin definition</span></span>
<span class="line"><span>│  │  ├─ router/ - Vue routing definition</span></span>
<span class="line"><span>│  │  ├─ screens/ - Vue screen component</span></span>
<span class="line"><span>│  │  │  └─ ErrorScreen.vue - Screen displayed when renderer process and routing errors occur</span></span>
<span class="line"><span>│  │  │  └─ MainScreen.vue</span></span>
<span class="line"><span>│  │  │  └─ SecondScreen.vue - Sample screen</span></span>
<span class="line"><span>│  │  ├─ store/ - Pinia store (Global state management) definition</span></span>
<span class="line"><span>│  │  ├─ utils/ - Renderer process utilities</span></span>
<span class="line"><span>│  │  ├─ App.vue - Vue app&#39;s root component</span></span>
<span class="line"><span>│  │  ├─ index.html - Root static index loaded by Electron renderer process</span></span>
<span class="line"><span>│  └─ └─ main.ts - Renderer process entry point</span></span>
<span class="line"><span>├─ tests/ - Application test configuration</span></span>
<span class="line"><span>│  ├─ results/ - Where to save PlayWright test result files and screenshots</span></span>
<span class="line"><span>│  ├─ specs/ - PlayWright test spec file</span></span>
<span class="line"><span>│  ├─ fixtures.ts - Test common execution API</span></span>
<span class="line"><span>│  └─ testUtil.ts - Test utilities</span></span>
<span class="line"><span>├─ .editorconfig - Editor recommended configuration file for IDE</span></span>
<span class="line"><span>├─ .eslintignore - List of files to be ignored by ESLint</span></span>
<span class="line"><span>├─ .gitignore - List of files to not upload to Git</span></span>
<span class="line"><span>├─ .prettierignore - List of files to disable Prettier file formatting</span></span>
<span class="line"><span>├─ .prettierrc - Prettier rule configurations</span></span>
<span class="line"><span>├─ CODE_OF_CONDUCT.md - Files used only on GitHub</span></span>
<span class="line"><span>├─ eslint.config.ts - ESLint rule configurations</span></span>
<span class="line"><span>├─ LICENSE - Project license file</span></span>
<span class="line"><span>├─ package.json - Node.js package configurations</span></span>
<span class="line"><span>├─ package-lock.json</span></span>
<span class="line"><span>├─ playwright.config.ts - Playwright test rules configurations</span></span>
<span class="line"><span>├─ pnpm-lock.yaml - PNPM Related Files</span></span>
<span class="line"><span>├─ pnpm-workspace.yaml - PNPM Related Files</span></span>
<span class="line"><span>├─ tsconfig.json - TypeScript configurations</span></span>
<span class="line"><span>├─ tsconfig.node.json - TypeScript configurations</span></span>
<span class="line"><span>├─ vite.config.mts - Vite compiler build configurations</span></span>
<span class="line"><span>└─ README.md - Files used only on GitHub</span></span></code></pre></div>`,2)]))}const g=n(i,[["render",t]]);export{f as __pageData,g as default};
